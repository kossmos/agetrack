let timer;
let startTime;
let isRunning = false;
let elapsedTime = 0;

const startButton = document.getElementById('startButton');
const resetButton = document.getElementById('resetButton');
const timeDisplay = document.querySelector('.time');
const currentAgeDisplay = document.getElementById('currentAge');
const ageEmoji = document.getElementById('ageEmoji');
const finalAgeDisplay = document.getElementById('finalAgeDisplay');
const progressBar = document.getElementById('progressBar');
const progressText = document.getElementById('progressText');
const elapsedTimeDisplay = document.getElementById('elapsedTime');
const remainingTimeDisplay = document.getElementById('remainingTime');
const themeSwitch = document.getElementById('checkbox');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞
function getAgeString(years, months) {
    let yearWord = '–ª–µ—Ç';
    if (years % 10 === 1 && years % 100 !== 11) {
        yearWord = '–≥–æ–¥';
    } else if (years % 10 >= 2 && years % 10 <= 4 && (years % 100 < 10 || years % 100 >= 20)) {
        yearWord = '–≥–æ–¥–∞';
    }

    let monthWord = '–º–µ—Å—è—Ü–µ–≤';
    if (months % 10 === 1 && months % 100 !== 11) {
        monthWord = '–º–µ—Å—è—Ü';
    } else if (months % 10 >= 2 && months % 10 <= 4 && (months % 100 < 10 || months % 100 >= 20)) {
        monthWord = '–º–µ—Å—è—Ü–∞';
    }

    return `${years} ${yearWord} ${months} ${monthWord}`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
function formatTime(hours, minutes, seconds) {
    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ç–∞–π–º–µ—Ä–∞
function resetTimer() {
    clearInterval(timer);
    isRunning = false;
    elapsedTime = 0;
    timeDisplay.textContent = '00:00:00';
    currentAgeDisplay.textContent = '-';
    ageEmoji.textContent = 'üßëüèªüë©üèª';
    startButton.textContent = '–°—Ç–∞—Ä—Ç';
    progressBar.style.width = '0%';
    progressText.textContent = '0%';
    elapsedTimeDisplay.textContent = '00:00:00';
    remainingTimeDisplay.textContent = document.getElementById('gameHours').value.padStart(2, '0') + ':00:00';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
function calculateFinalAge() {
    const startAge = parseInt(document.getElementById('startAge').value);
    const yearsPerHour = parseInt(document.getElementById('yearsPerHour').value);
    const gameHours = parseInt(document.getElementById('gameHours').value);
    
    const finalAge = startAge + (yearsPerHour * gameHours);
    finalAgeDisplay.textContent = getAgeString(finalAge, 0);
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
document.getElementById('startAge').addEventListener('input', calculateFinalAge);
document.getElementById('yearsPerHour').addEventListener('input', calculateFinalAge);
document.getElementById('gameHours').addEventListener('input', calculateFinalAge);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
calculateFinalAge();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
function updateProgress(hours, minutes, seconds) {
    const gameHours = parseInt(document.getElementById('gameHours').value);
    const totalMilliseconds = gameHours * 3600000; // –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    const currentMilliseconds = hours * 3600000 + minutes * 60000 + seconds * 1000; // —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    const progress = (currentMilliseconds / totalMilliseconds) * 100;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    progressBar.style.width = `${Math.min(progress, 100)}%`;
    progressText.textContent = `${Math.round(Math.min(progress, 100))}%`;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è
    elapsedTimeDisplay.textContent = formatTime(hours, minutes, seconds);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
    const remainingMilliseconds = Math.max(0, totalMilliseconds - currentMilliseconds);
    const remainingHours = Math.floor(remainingMilliseconds / 3600000);
    const remainingMinutes = Math.floor((remainingMilliseconds % 3600000) / 60000);
    const remainingSecs = Math.floor((remainingMilliseconds % 60000) / 1000);
    remainingTimeDisplay.textContent = formatTime(remainingHours, remainingMinutes, remainingSecs);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
themeSwitch.addEventListener('change', function() {
    if (this.checked) {
        document.documentElement.setAttribute('data-theme', 'dark');
        localStorage.setItem('theme', 'dark');
    } else {
        document.documentElement.setAttribute('data-theme', 'light');
        localStorage.setItem('theme', 'light');
    }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π —Ç–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
const currentTheme = localStorage.getItem('theme');
if (currentTheme) {
    document.documentElement.setAttribute('data-theme', currentTheme);
    if (currentTheme === 'dark') {
        themeSwitch.checked = true;
    }
}

function updateTime() {
    const now = new Date();
    const diff = now - startTime + elapsedTime;
    const hours = Math.floor(diff / 3600000);
    const minutes = Math.floor((diff % 3600000) / 60000);
    const seconds = Math.floor((diff % 60000) / 1000);

    timeDisplay.textContent = formatTime(hours, minutes, seconds);

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    updateProgress(hours, minutes, seconds);

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç
    const startAge = parseInt(document.getElementById('startAge').value);
    const yearsPerHour = parseInt(document.getElementById('yearsPerHour').value);
    const gameHours = parseInt(document.getElementById('gameHours').value);

    // –ù–æ–≤—ã–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–∞—Å—á—ë—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞
    const totalGameYears = (diff / 3600000) * yearsPerHour;
    const totalYears = startAge + Math.floor(totalGameYears);
    const totalMonths = Math.floor((totalGameYears - Math.floor(totalGameYears)) * 12);

    currentAgeDisplay.textContent = getAgeString(totalYears, totalMonths);

    // –û–±–Ω–æ–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞
    if (totalYears < 30) {
        ageEmoji.textContent = 'üßëüèªüë©üèª'; // –ú–æ–ª–æ–¥—ã–µ –ª—é–¥–∏
    } else if (totalYears < 60) {
        ageEmoji.textContent = 'üë®üèªüë©üèª'; // –í–∑—Ä–æ—Å–ª—ã–µ
    } else {
        ageEmoji.textContent = 'üë¥üèªüëµüèª'; // –ü–æ–∂–∏–ª—ã–µ
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å –ª–∏ –≤—Ä–µ–º—è
    if (hours >= gameHours) {
        clearInterval(timer);
        isRunning = false;
        startButton.textContent = '–°—Ç–∞—Ä—Ç';
    }
}

startButton.addEventListener('click', () => {
    if (!isRunning) {
        startTime = new Date();
        timer = setInterval(updateTime, 1000);
        isRunning = true;
        startButton.textContent = '–ü–∞—É–∑–∞';
    } else {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –Ω–∞ –ø–∞—É–∑—É?')) {
            clearInterval(timer);
            elapsedTime += new Date() - startTime;
            isRunning = false;
            startButton.textContent = '–°—Ç–∞—Ä—Ç';
        }
    }
});

resetButton.addEventListener('click', function() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å —Ç–∞–π–º–µ—Ä? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
        resetTimer();
    }
});

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker –¥–ª—è PWA
if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
        navigator.serviceWorker.register('/service-worker.js')
            .then(registration => {
                console.log('ServiceWorker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ:', registration.scope);
            })
            .catch(error => {
                console.log('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ServiceWorker:', error);
            });
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA
let deferredPrompt;
const installButton = document.getElementById('installPWA');
installButton.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

window.addEventListener('beforeinstallprompt', (e) => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    e.preventDefault();
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–∑–∂–µ
    deferredPrompt = e;
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    installButton.style.display = 'block';
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
window.addEventListener('appinstalled', (event) => {
    console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    installButton.style.display = 'none';
    // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
    alert('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
installButton.addEventListener('click', async () => {
    if (deferredPrompt) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        deferredPrompt.prompt();
        // –û–∂–∏–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const { outcome } = await deferredPrompt.userChoice;
        console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏: ${outcome}`);
        // –û–±–Ω—É–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
        deferredPrompt = null;
        
        if (outcome === 'accepted') {
            installButton.style.display = 'none';
        }
    } else {
        // –ï—Å–ª–∏ deferredPrompt –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
        let message = '';
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä –∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        const userAgent = navigator.userAgent.toLowerCase();
        const isIOS = /iphone|ipad|ipod/.test(userAgent);
        const isAndroid = /android/.test(userAgent);
        const isSafari = /safari/.test(userAgent);
        const isChrome = /chrome/.test(userAgent);
        
        if (isIOS && isSafari) {
            message = '–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ iOS: –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞, –∑–∞—Ç–µ–º "–ù–∞ —ç–∫—Ä–∞–Ω ¬´–î–æ–º–æ–π¬ª"';
        } else if (isAndroid && isChrome) {
            message = '–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ Android: –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ç—Ä–∏ —Ç–æ—á–∫–∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É, –∑–∞—Ç–µ–º "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"';
        } else {
            message = '–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: –æ—Ç–∫—Ä–æ–π—Ç–µ —Å–∞–π—Ç –≤ Chrome –∏–ª–∏ Safari –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ';
        }
        
        alert(message);
    }
}); 